---
- name: Primeiro de Reboot de Teste - UPFIX 6.1 - PRIMEIRO REBOOT
  hosts: "{{ updatefix_inventory_group_ok }}"
  vars_files:
    - vars/vars.yml
  gather_facts: True
  become: yes
  tasks:
    - name: Debug para listar variáveis do grupo
      debug:
        msg: 
          - "updatefix_version: {{ updatefix_version }}"
          - "updatefix_inventory: {{ updatefix_inventory }}"
          - "updatefix_inventory_group: {{ updatefix_inventory_group }}"
          - "update_type: {{ update_type }}"
          - "reboot: {{ reboot }}"

    - name: Aguardar por 10 segundos
      pause:
        seconds: 10

    - name: Convert 'active_enabled_services' string to list
      set_fact:
         active_enabled_services_list: "{{ ansible_local.services_status_check.localfacts.active_enabled_services | from_yaml }}"

    - name: Convert 'active_disabled_services' string to list
      set_fact:
         active_disabled_services_list: "{{ ansible_local.services_status_check.localfacts.active_disabled_services | from_yaml }}"

    - name: adicionar mensagem de log sobre primeiro reboot
      lineinfile:
        path: /var/log/ansible/updatefix/updatefix_{{ updatefix_version }}/updatefix_{{ updatefix_version }}.log
        line: |
          ################# PRIMEIRO REBOOT ##########################"
          {{ lookup('pipe','date +%Y-%m-%d') }} {{ lookup('pipe','date +%H:%M:%S') }} {{ inventory_hostname }}: procedimento de reboot realizado!
          {{ lookup('pipe','date +%Y-%m-%d') }} {{ lookup('pipe','date +%H:%M:%S') }} {{ inventory_hostname }}:  inicio do processo de reboot será iniciado, informações detalhadas sobre o reboot podem ser encotradas em /var/log/ansible/updatefix/updatefix_{{ updatefix_version }}/primeiro_reboot_updatefix_{{ updatefix_version }}.log
      when: reboot == 'yes'

    - name: adicionar mensagem de log sobre não realização de reboot
      lineinfile:
        path: /var/log/ansible/updatefix/updatefix_{{ updatefix_version }}/updatefix_{{ updatefix_version }}.log
        line: |
          ################# PRIMEIRO REBOOT ##########################"
          {{ lookup('pipe','date +%Y-%m-%d') }} {{ lookup('pipe','date +%H:%M:%S') }} {{ inventory_hostname }}: durante a execução da automação foi selecionada a opção de não realizar o reboot do servidor
          {{ lookup('pipe','date +%Y-%m-%d') }} {{ lookup('pipe','date +%H:%M:%S') }} {{ inventory_hostname }}:  Caso opte pelo processo de reboot realize de for manual após a automação de update
      when: reboot == 'no'

    - name: Gerar arquivo de log para primeiro reboot
      template:
        src: primeiro_reboot_log.j2
        dest: /var/log/ansible/updatefix/updatefix_{{ updatefix_version }}/primeiro_reboot_updatefix_{{ updatefix_version }}.log

    - name: Reboot do Servidor
      ansible.builtin.reboot:
        reboot_timeout: 600
      when: reboot == 'yes'
      register: reboot_result

    - name: Esperar o Servidor Voltar
      ansible.builtin.wait_for_connection:
        delay: 60
        timeout: 300
      when: reboot == 'yes'

    - name: Definir o Status do Reboot
      set_fact:
        first_reboot_status_check: "{{ 'OK' if reboot_result.changed else 'FAIL' }}"

    - name: Criar arquivo de facts para reboot_status_check
      template:
        src: first_reboot_status_check.j2
        dest: "/etc/ansible/facts.d/first_reboot_status_check.fact"

    - name: adicionar mensagem de log sobre status do primeiro reboot
      lineinfile:
        path: /var/log/ansible/updatefix/updatefix_{{ updatefix_version }}/updatefix_{{ updatefix_version }}.log
        line: |
          {{ lookup('pipe','date +%Y-%m-%d') }} {{ lookup('pipe','date +%H:%M:%S') }} {{ inventory_hostname }}: REBOOT REALIZADO COM SUCESSO!!
          {{ lookup('pipe','date +%Y-%m-%d') }} {{ lookup('pipe','date +%H:%M:%S') }} {{ inventory_hostname }}: Reboot realizado com Sucesso!
